Business Problem

The main problem that I am solving is based on the fact that we travel due to social or official reasons all the time 
throughout the world in different cities in different countries. While we do that, we usually reserve the hotels for our 
temporary stay. Over the years many systems have been developed to bring the cornucopia of hotels to our grip where we can 
choose from a uncountable options. But what about the loan rangers or the adventure seeking solo travellers or the group of 
backpackers who travel just for fun or in a whim. There is no instant solution for those. We can also imagine a scenario where 
there are some troubles with your hotel reservations or you missed the reservation and you need a place to stay. All these 
problem can be solved by this application. It tracks your current location and gives you a list of available hotels in close 
proximity and gives you the direction(of course, we don't want you get lost). What if we could leave the responsibility to our 
machine and algorithm. That could save us a lot of time. The user that we can approach through this system is immeasurable. The 
hospitality industry is multi-billion dollar industry and one of the biggest in the world and by implementing our platform we can 
simplify a humungous task that will surely be appreciated by a huge number of users.

Data

Our data has 2 main components. New York location data in JSON format. The dataset contains all the information about the 
boroughs and the neighbourhoods present in New York. Apart from the names, the co-ordinates of the neighbourhoods are the 
primary data that we shall use from this dataset. The other part of the data comes from the foursquare API. We use two types 
of queries for fetching the data from the foursquare API. First type of query is ‘explore’ that is used to fetch the venues 
present in a 1.5 km radius of the neighbourhood of our target. Second type of query that I am using is “venues”. This query 
is used to check the details about the venues that are hotels and get those details about them since we are interested in only 
those venues that are hotels. We check those venues by using their venue id. In the ultimate stage of execution of the idea 
there will be an app that will track your location and tell you the list of hotels near you. The app will show the rating of 
the hotels and the distance of the hotel from your current location. The idea is inspired by the mobile app called Mr. Jitters. 
The app looks for your current location and when it finds you an icon appears on the screen and when you tap the icon it tells 
you the location of the cafés near you in a walking distance with their ratings and the distances. The app is also open sourced on GitHub.
So we shall not take the headache of developing an app, as it is out of the scope of the course. Instead we shall establish 
that the backend of the idea works perfectly. So we shall feed fixed location through queries in Foursquare API and then 
explore the location for venues and then we shall look for venues that has category Hotel. We shall then look for the ratings 
of those hotels and the distance from our current co-ordinate and put it in a data-frame. This data will be available for the user.
We shall keep track of the searches by the users and since the topic of this capstone is "Battle of Neighbourhoods" we shall 
compare the hotels of one neighbourhood to other neighbourhoods.For our own interest we shall use the ratings, number of tips, 
number of likes of the hotels to cluster the hotels in a certain neighbourhood. We shall then try to identify those clusters 
and after creating clusters in different neighbourhoods. We shall be able to compare hotels in different neighbourhoods.

Methodology

The workflow of the project starts with the web scraping and data wrangling. Using the Beautiful Soup library, the postal code 
and the neighborhood is processed to derive the latitude and longitude of the neighborhoods we want. With the folium Map, the 
latitude and longitude of the neighborhoods provides the choropleth visualization.Folium- Python visualization library would be
used to visualize the neighborhoods cluster distribution of cities over an interactive leaflet map. Extensive comparative
analysis of two randomly picked neighborhoods world be carried out to derive the desirable insights from the outcomes using 
python’s scientific libraries Pandas, NumPy and Scikit-learn. Unsupervised machine learning algorithm K-mean clustering would 
be applied to form the clusters of different categories of places residing in and around the neighborhoods. These clusters 
from each of those two chosen neighborhoods would be analyzed individually collectively and comparatively to derive the 
conclusions.Now, the choice is what is the best to choose from and what will we get.

Results

Using the graphs and the folium map, we were able to make what was necessary to figure out what stands out. We cluster our 
distribution of cities to see that when the neighborhoods are closer, results skyrocket out of the place. Which neighborhood is 
the best? That's all based on the variety of factors we determined while observing the dataset. 

Discussion

This project is beneficial in many terms, it will save the users time and money. Many a times, people when moved to the new 
place, they used to worry for settling down. This project recommend the better places in a very less time. This is a far better
approach for users to figure out what works best.

Conclusion:
This Analysis concludes that the two neighborhoods have great values such as locality and uniqueness, but out of these two 
the second set of neighborhoods has better prospects for buying houses or choose for rental houses.This set has higher 
value based on the fact that it trumps in all factors all over the other. This means how good it is, what it offers, the location, 
and the population, not also forgetting education in the fact that nearby schools in this neighborhood is much better.
